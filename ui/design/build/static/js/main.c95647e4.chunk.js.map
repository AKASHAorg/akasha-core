{"version":3,"sources":["utils/marginSetter.ts","components/Avatar/styled-avatar.ts","components/Avatar/index.tsx","components/Button/styled-button.ts","components/Button/index.tsx","components/Tabs/tabs-context.tsx","components/Tabs/tab.tsx","components/Spinner/index.tsx","components/Tabs/styled-tabs.ts","components/Tabs/tabs.tsx","styles/colors-light.ts","styles/shapes.ts","styles/spacing.ts","styles/theme/components/checkbox.ts","styles/theme/components/icon.ts","styles/theme/components/radiobutton.ts","styles/theme/components/text-input.ts","styles/theme/index.ts","styles/themes/create-theme.ts","styles/themes/dark-theme.ts","styles/colors-dark.ts","styles/themes/light-theme.ts","index.ts"],"names":["MarginSetter","marginObj","marginString","margin","top","left","bottom","right","StyledAvatar","styled","div","props","backgroundColor","roundedCorners","marginSize","borderRadius","theme","shapes","css","colors","white","spacing","components","avatar","sizes","size","defaultProps","Avatar","isClickable","onClick","src","alt","StyledButton","button","buttonType","ghost","disabled","fullWidth","borderColor","grey","hoverColor","darkGrey","red","darkRed","blue","darkBlue","disabledOpacity","borderWidth","small","fontSize","normal","fontFamily","fontWeight","regular","padding","noop","Button","children","TabsContext","React","tabs","prevActiveTab","id","activeTab","addTab","newTab","removeTab","tabId","tab","ev","TabProvider","tabsState","setTabsState","Provider","value","findIndex","t","prevState","concat","filter","Tab","title","propTypes","number","isRequired","string","element","Wrapper","minHeight","rotator","keyframes","dash","StyledCircle","className","fill","strokeWidth","strokeLinecap","cx","cy","r","border","StyledSpinner","svg","width","Spinner","height","viewBox","AkashaTabs","TabsContainer","TabsList","ul","darkBackground","center","TabTitleItem","li","titleItem","isActiveTab","themeProps","background","dark","TabsContentContainer","TabAnchorItem","Tabs","tabElements","setTabElements","loadingTab","setLoadingTab","beforeChange","then","onChange","undefined","handleTabClick","persist","Consumer","map","key","innerRef","tabElement","slice","spinnerComponent","lightGrey","green","yellow","bold","shadow0","shadow1","shadow2","shadow3","lineHeight","xs","sm","md","lg","checkbox","gap","checkedIconSize","input","iconPadding","borderSize","radiobutton","list","rowPadding","iconGap","popover","searchPopover","maxHeight","iconSize","actionPopover","buttonGap","modal","headerGap","maxWidth","base","basePadding","header","body","footer","form","defaultMargin","textInput","middleRow","suggestions","text","searchHeight","iconWidth","iconHeight","buttonHeight","headerText","headerLineHeight","bodyText","bodyLineHeight","closeButtonTop","closeButtonRight","closeButtonLineHeight","createCustomCheckBoxTheme","styledComponentsTheme","checkBox","color","radius","check","extend","checked","normalizeColor","hover","icon","icons","FormCheckmark","textColor","createCustomIconTheme","createCustomRadiobuttonTheme","radioButton","createCustomTextInputTheme","container","placeholder","focus","createGrommetTheme","deepMerge","global","weight","font","family","control","light","medium","select","grommet","createTheme","overrides","styles","name"],"mappings":"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","file":"static/js/main.c95647e4.chunk.js","sourcesContent":["import MarginInterface from '../interfaces/margin.interface';\n\n// tslint:disable-next-line:function-name\nexport default function MarginSetter(marginObj: MarginInterface): string {\n  let marginString = '';\n  if (marginObj.margin) {\n    marginString = `${marginObj.margin}`;\n    return marginString;\n  }\n  if (marginObj.top) {\n    marginString += `${marginObj.top} `;\n  }\n  if (marginObj.left) {\n    marginString += `${marginObj.left} `;\n  }\n  if (marginObj.bottom) {\n    marginString += `${marginObj.bottom} `;\n  }\n  if (marginObj.right) {\n    marginString += `${marginObj.right}`;\n  }\n  return marginString;\n}\n","import styled, { css } from 'styled-components';\nimport MarginInterface from '../../interfaces/margin.interface';\nimport MarginSetter from '../../utils/marginSetter';\n\n/* avatar size:\n * xs = 24px;\n * sm = 32px;\n * md = 40px;\n * lg = 48px;\n */\nexport type AvatarSize = 'xs' | 'sm' | 'md' | 'lg';\n\ninterface AvatarProps {\n  roundedCorners?: boolean;\n  size: AvatarSize;\n  isClickable: boolean;\n  margin?: MarginInterface;\n  backgroundColor?: string;\n}\n\nconst StyledAvatar = styled.div<AvatarProps>`\n  ${props => {\n    const { margin, backgroundColor, roundedCorners } = props;\n\n    const marginSize = margin ? MarginSetter(margin) : '0px';\n    const borderRadius = roundedCorners ? props.theme.shapes.borderRadius : '';\n\n    return css`\n      background: ${props => backgroundColor || props.theme.colors.white}\n      margin: ${marginSize}\n      border-radius: ${borderRadius}\n    `;\n  }}\n  overflow: hidden;\n  width: ${props =>\n    props.theme.spacing.components.avatar.sizes[props.size]\n      ? props.theme.spacing.components.avatar.sizes[props.size]\n      : '100%'};\n  img {\n    display: block;\n    width: 100%;\n    height: 100%;\n  }\n`;\n\nStyledAvatar.defaultProps = {\n  roundedCorners: false,\n};\n\nexport default StyledAvatar;\n","/* eslint-disable */\nimport * as React from 'react';\nimport CommonInterface from '../../interfaces/common.interface';\nimport MarginInterface from '../../interfaces/margin.interface';\nimport StyledAvatar, { AvatarSize } from './styled-avatar';\n\nexport interface AvatarProps extends CommonInterface<HTMLDivElement> {\n  src: string;\n  onClick?: React.EventHandler<React.SyntheticEvent<HTMLDivElement, MouseEvent>>;\n  alt?: string;\n  margin?: MarginInterface;\n  backgroundColor?: string;\n}\n\nconst Avatar: React.FC<AvatarProps & Partial<typeof defaultProps>> = props => {\n  const isClickable = typeof props.onClick === 'function';\n\n  return (\n    <StyledAvatar\n      roundedCorners={props.roundedCorners}\n      onClick={props.onClick}\n      size={props.size!}\n      isClickable={isClickable}\n      margin={props.margin}\n      backgroundColor={props.backgroundColor}\n    >\n      <img src={props.src} alt={props.alt} />\n    </StyledAvatar>\n  );\n};\n\nconst defaultProps = {\n  size: 'xs' as AvatarSize,\n  roundedCorners: true,\n};\nAvatar.defaultProps = defaultProps;\n\nexport default Avatar;\n","import { SyntheticEvent } from 'react';\nimport styled, { css } from 'styled-components';\nimport MarginInterface from '../../interfaces/margin.interface';\nimport MarginSetter from '../../utils/marginSetter';\n\nexport type ButtonType = 'regular' | 'alert' | 'primary';\n\ninterface ButtonProps {\n  buttonType: ButtonType;\n  ghost?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  fullWidth?: boolean;\n  onClick: (ev: SyntheticEvent) => void;\n  margin?: MarginInterface;\n  backgroundColor?: string;\n}\n\nconst StyledButton = styled.button<ButtonProps>`\n  ${props => {\n    const {\n      theme: { colors },\n      buttonType,\n      ghost,\n      disabled,\n      fullWidth,\n      margin,\n      backgroundColor,\n    } = props;\n\n    let borderColor = colors.grey;\n    let hoverColor = colors.darkGrey;\n    switch (buttonType) {\n      case 'alert':\n        borderColor = colors.red;\n        hoverColor = colors.darkRed;\n        break;\n      case 'primary':\n        borderColor = colors.blue;\n        hoverColor = colors.darkBlue;\n        break;\n      default:\n    }\n\n    // change margins to ones passed in props\n    let marginSize = '0px';\n    if (margin) {\n      marginSize = MarginSetter(margin);\n    }\n\n    // change background color to the one passed in props\n    if (backgroundColor) {\n      borderColor = backgroundColor;\n    }\n\n    return css`\n      background-color: ${ghost ? 'transparent' : borderColor};\n      border-color: ${borderColor};\n      color: ${ghost ? borderColor : colors.white};\n      cursor: ${disabled ? 'not-allowed' : 'pointer'};\n      margin: ${marginSize};\n      ${disabled\n        ? `opacity: ${colors.disabledOpacity}`\n        : css`\n            &:hover {\n              background-color: ${ghost ? 'transparent' : hoverColor};\n              border-color: ${hoverColor};\n              color: ${ghost ? hoverColor : colors.white};\n            }\n          `}\n\n      ${fullWidth\n        ? css`\n            width: 100%;\n          `\n        : ''}\n    `;\n  }};\n\n  align-items: center;\n\n  border-radius: ${props => props.theme.shapes.borderRadius};\n  border-style: solid;\n  border-width: ${props => props.theme.spacing.components.button.borderWidth};\n\n  display: inline-flex;\n  font-size: ${props =>\n    props.small\n      ? props.theme.spacing.components.button.fontSize.small\n      : props.theme.spacing.components.button.fontSize.normal};\n  font-family: ${props => props.theme.shapes.fontFamily};\n  font-weight: ${props => props.theme.shapes.fontWeight.regular};\n  justify-content: center;\n\n  padding: ${props =>\n    props.small\n      ? props.theme.spacing.components.button.padding.small\n      : props.theme.spacing.components.button.padding.normal};\n\n  user-select: none;\n`;\n\nStyledButton.defaultProps = {\n  ghost: false,\n  disabled: false,\n  small: false,\n  fullWidth: false,\n};\n\nexport default StyledButton;\n","import * as React from 'react';\nimport MarginInterface from '../../interfaces/margin.interface';\nimport StyledButton, { ButtonType } from './styled-button';\n\nexport interface IButtonProps {\n  buttonType?: ButtonType;\n  ghost?: boolean;\n  disabled?: boolean;\n  small?: boolean;\n  fullWidth?: boolean;\n  onClick: React.EventHandler<React.SyntheticEvent>;\n  margin?: MarginInterface;\n  backgroundColor?: string;\n  children: React.ReactNode;\n}\n\nconst noop = () => {};\n\nconst Button: React.FC<IButtonProps> = props => {\n  const { buttonType, ghost, disabled, small, fullWidth, onClick, margin, backgroundColor } = props;\n\n  return (\n    <StyledButton\n      buttonType={buttonType!}\n      ghost={ghost}\n      disabled={disabled}\n      small={small}\n      fullWidth={fullWidth}\n      onClick={disabled ? noop : onClick}\n      margin={margin}\n      backgroundColor={backgroundColor}\n    >\n      {props.children}\n    </StyledButton>\n  );\n};\n\nconst defaultProps = {\n  buttonType: 'regular' as ButtonType,\n  ghost: false,\n  disabled: false,\n  small: false,\n  fullWidth: false,\n};\n\nStyledButton.defaultProps = defaultProps;\n\nexport default Button;\n","import * as React from 'react';\n\nexport type ITabsContext = IState & {\n  addTab: (newTab: ITab) => void;\n  removeTab: (tabId: number) => void;\n  onClick: (tab: ITab) => (ev: React.SyntheticEvent) => void;\n};\n\nexport interface ITab {\n  /** the `id` of the tab */\n  id: number;\n  /** `title` will appear as tab button. must be a string  */\n  title?: string;\n}\n\nexport interface IProviderProps {\n  activeTab: ITab;\n  children: React.ReactNode;\n}\n\ninterface IState {\n  tabs: ITab[];\n  prevActiveTab: ITab;\n  activeTab: ITab;\n}\n\nconst TabsContext = React.createContext<ITabsContext>({\n  tabs: [],\n  prevActiveTab: { id: -1 },\n  activeTab: { id: -1 },\n  addTab: (newTab: ITab) => {},\n  removeTab: (tabId: number) => {},\n  onClick: (tab: ITab) => (ev: React.SyntheticEvent) => {},\n});\n\nconst TabProvider: React.FC<IProviderProps> = props => {\n  const [tabsState, setTabsState] = React.useState<IState>({\n    tabs: [],\n    prevActiveTab: { id: -1 },\n    activeTab: props.activeTab,\n  });\n\n  const addTab = (newTab: ITab) => {\n    const newTabExists = tabsState.tabs.findIndex(t => t.id === newTab.id);\n    if (newTabExists > -1) {\n      return;\n    }\n    return setTabsState(prevState => ({\n      ...prevState,\n      tabs: prevState.tabs.concat(newTab),\n    }));\n  };\n  const removeTab = (tabId: number) => {\n    setTabsState(prevState => ({\n      ...prevState,\n      tabs: prevState.tabs.filter(t => t.id !== tabId),\n    }));\n  };\n  const onClick = (tab: ITab) => (ev: React.SyntheticEvent) => {\n    setTabsState(prevState => ({\n      tabs: prevState.tabs,\n      prevActiveTab: prevState.activeTab,\n      activeTab: tab,\n    }));\n  };\n\n  return (\n    <TabsContext.Provider\n      value={{\n        ...tabsState,\n        addTab,\n        removeTab,\n        onClick,\n      }}\n    >\n      {props.children}\n    </TabsContext.Provider>\n  );\n};\n\nexport default TabProvider;\n\nexport { TabsContext };\n","import propTypes from 'prop-types';\nimport * as React from 'react';\nimport { ITab, TabsContext } from './tabs-context';\n\ninterface TabProps extends ITab {\n  children: React.ReactElement;\n}\n\nconst Tab: React.FC<TabProps> = props => {\n  const value = React.useContext(TabsContext);\n  const { id, title, children } = props;\n\n  React.useEffect(() => {\n    value.addTab({ id, title });\n  }, [id, title, value]);\n\n  if (value.activeTab.id === id) {\n    return children;\n  }\n\n  return <></>;\n};\n\nTab.propTypes = {\n  /* Id of tab >= 0 */\n  id: propTypes.number.isRequired,\n  /* Title of the tab, shown as clickable button */\n  title: propTypes.string.isRequired,\n  /* Content of the tab */\n  children: propTypes.element.isRequired,\n};\n\nexport default Tab;\n","import * as React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\nconst Wrapper = styled.div<{ minHeight: number }>`\n  width: 100%;\n  display: flex;\n  min-height: ${props => props.minHeight}px;\n  justify-content: center;\n  padding: 10px 0 0 0;\n`;\n\nconst rotator = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(270deg);\n  }\n`;\n\nconst dash = keyframes`\n  0% {\n    stroke-dashoffset: 187;\n  }\n  50% {\n    stroke-dashoffset: ${187 / 4};\n    transform: rotate(135deg);\n  }\n  100% {\n    stroke-dashoffset: 187;\n    transform: rotate(450deg);\n  }\n`;\n\n// const colors = keyframes`\n//   0% {\n//     stroke: #026337;\n//   }\n//   25% {\n//     stroke: #c5dbcf;\n//   }\n//   50% {\n//     stroke: #003a63;\n//   }\n//   75% {\n//     stroke: #c75c35;\n//   }\n//   100% {\n//     stroke: #c7985c;\n//   }\n// `;\n\nconst myCircle = ({ className }: { className?: string }) => (\n  <circle\n    className={className}\n    fill=\"none\"\n    strokeWidth=\"6\"\n    strokeLinecap=\"round\"\n    cx=\"33\"\n    cy=\"33\"\n    r=\"30\"\n  />\n);\n\nconst StyledCircle = styled(myCircle)`\n  stroke-dasharray: 187;\n  stroke-dashoffset: 0;\n  transform-origin: center;\n  stroke: ${props => props.theme.colors.border};\n  animation: ${dash} 1.4s ease-in-out infinite;\n`;\n\nconst StyledSpinner = styled.svg`\n  animation: ${rotator} 1.4s linear infinite;\n  width: ${props => props.width}px;\n  height: ${props => props.width}px;\n`;\n\ninterface SpinnerProps {\n  /** the size (width, height) of the spinner. @default 50 */\n  size?: number;\n  /** speed (in seconds). ex: 1.2 or 2. @default 1.2 */\n  speed?: number;\n}\n\nconst Spinner: React.FC<SpinnerProps> = props => {\n  const { size = 50 } = props; // , speed = 1.2\n  return (\n    <Wrapper minHeight={size}>\n      <StyledSpinner width={size} height={size} viewBox=\"0 0 66 66\">\n        <StyledCircle />\n      </StyledSpinner>\n    </Wrapper>\n  );\n};\nexport default Spinner;\n","import styled, { css } from 'styled-components';\n\nconst AkashaTabs = styled.div`\n  position: relative;\n`;\n\nconst TabsContainer = styled.div``;\n\nconst TabsList = styled.ul<{ center: boolean }>`\n  padding-left: 0;\n  list-style: none;\n  margin: 0;\n  padding-top: 2px;\n  background: ${props => props.theme.colors.darkBackground};\n  font-size: 0.875em;\n  display: flex;\n  flex-direction: row;\n  justify-content: ${props => (props.center ? 'center' : 'flex-start')};\n  li:first-of-type,\n  li:last-child {\n    border-left: 0;\n  }\n`;\n\nconst TabTitleItem = styled.li<{ innerRef: any; key: string; id: string; isActiveTab: boolean }>`\n  display: inline-block;\n  transition: opacity 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\n  padding: ${props => props.theme.spacing.padding.tabs.titleItem};\n  cursor: pointer;\n  opacity: 0.8;\n  color: ${props => props.theme.colors.darkGrey};\n  border-top: 1px solid ${props => props.theme.colors.border};\n  border-right: 1px solid ${props => props.theme.colors.border};\n  border-bottom: ${props => (props.isActiveTab ? '0' : `1px solid ${props.theme.colors.border}`)};\n  text-transform: uppercase;\n  margin-bottom: ${props => (props.isActiveTab ? '0' : '-1px')};\n  &:hover {\n    opacity: 1;\n  }\n  ${props => {\n    return (\n      props.isActiveTab &&\n      css`\n        transition: all 300ms cubic-bezier(0.4, 0, 0.2, 1);\n        cursor: default;\n        opacity: 1;\n        background-color: ${themeProps => themeProps.theme.colors.background};\n        color: ${themeProps => themeProps.theme.colors.dark};\n      `\n    );\n  }}\n`;\n\nconst TabsContentContainer = styled.div`\n  background-color: ${props => props.theme.colors.background};\n  padding: 1em;\n  color: ${props => props.theme.colors.dark};\n`;\nconst TabAnchorItem = styled.div`\n  user-select: none;\n`;\n\nexport { AkashaTabs, TabsContainer, TabsList, TabTitleItem, TabsContentContainer, TabAnchorItem };\n","import * as React from 'react';\nimport Spinner from '../Spinner';\nimport {\n  AkashaTabs,\n  TabAnchorItem,\n  TabsContainer,\n  TabsContentContainer,\n  TabsList,\n  TabTitleItem,\n} from './styled-tabs';\nimport TabProvider, { ITab, ITabsContext, TabsContext } from './tabs-context';\n\ninterface ITabsProps {\n  /**\n   * Event triggered before changing tabs. Must return a promise. Use it to fetch data asynchronously.\n   * Until the data is fetched it will display an loading spinner which can be customised as well.\n   * This method must return a promise which when resolved must return the tabId\n   * @example beforeChange = (tab) => { return Promise.resolve() }\n   */\n  beforeChange?: (tab: ITab) => Promise<number>;\n  spinnerComponent?: React.ReactNode;\n  /**\n   * Event triggered when a tab is changed.\n   */\n  onChange?: (tab: ITab) => void;\n  /**\n   * The initially active tab. Title can be omitted.\n   * @example <Tabs activeTab={{ id: 0 }} />\n   */\n  activeTab: ITab;\n  /**\n   * prop to center the tabs on the tabs bar.\n   */\n  center?: boolean;\n}\n\ntype LoadingTabsState = ITab | undefined;\ntype ITabsState = HTMLLIElement[];\n\nconst Tabs: React.FC<ITabsProps> = props => {\n  const [tabElements, setTabElements] = React.useState<ITabsState>([]);\n  const [loadingTab, setLoadingTab] = React.useState<LoadingTabsState>();\n\n  React.useEffect(() => {\n    if (typeof props.beforeChange === 'function' && loadingTab) {\n      props.beforeChange(loadingTab).then(() => {\n        if (typeof props.onChange === 'function') {\n          props.onChange(loadingTab);\n        }\n        setLoadingTab(undefined);\n      });\n    }\n  }); // , [loadingTab]\n\n  const handleTabClick = (value: ITabsContext, tab: ITab) => (ev: React.SyntheticEvent) => {\n    if (typeof props.beforeChange === 'function') {\n      setLoadingTab(tab);\n      value.onClick(tab)(ev);\n      ev.persist();\n      return;\n    }\n    if (typeof props.onChange === 'function') {\n      props.onChange(tab);\n    }\n    value.onClick(tab)(ev);\n  };\n\n  return (\n    <TabProvider activeTab={props.activeTab}>\n      <TabsContext.Consumer>\n        {value => (\n          <AkashaTabs>\n            <TabsContainer>\n              <TabsList center={props.center!}>\n                {value.tabs.map((tab: ITab) => (\n                  <TabTitleItem\n                    key={`${tab.id}`}\n                    onClick={handleTabClick(value, tab)}\n                    id={`${tab.id}`}\n                    isActiveTab={value.activeTab.id === tab.id}\n                    innerRef={(tabElement: HTMLLIElement) => {\n                      if (!tabElements[tab.id]) {\n                        setTabElements((prevState: ITabsState) => [\n                          ...prevState.slice(0, tab.id),\n                          tabElement,\n                          ...prevState.slice(tab.id),\n                        ]);\n                      }\n                    }}\n                  >\n                    <TabAnchorItem>{tab.title}</TabAnchorItem>\n                  </TabTitleItem>\n                ))}\n              </TabsList>\n            </TabsContainer>\n            <TabsContentContainer>\n              {!loadingTab && props.children}\n              {loadingTab && loadingTab.id === value.activeTab.id && props.spinnerComponent}\n            </TabsContentContainer>\n          </AkashaTabs>\n        )}\n      </TabsContext.Consumer>\n    </TabProvider>\n  );\n};\n\nTabs.defaultProps = {\n  spinnerComponent: <Spinner />,\n};\n\nexport default Tabs;\n","import IColors from '../interfaces/IColors';\n\n// colors\nconst colors: IColors = {\n  disabledOpacity: '0.5',\n  dark: '#2E3747', // dark\n  darkGrey: '#778390', // dark-grey\n  grey: '#B4BCC8', // grey\n  lightGrey: '#D8DCDF', // light-grey\n  darkBackground: '#EFEFF1', // dark-background\n  border: '#EEEEEE', // light-border\n  background: '#F8F8F8', // background\n  blue: '#0598FF', // blue\n  darkBlue: '#0588E6', // dark-blue\n  red: '#F96A6A', // red\n  darkRed: '#E66363', // dark-red\n  green: '#7ACC80', // green\n  yellow: '#FFC02F', // yellow\n  white: '#FFF', // white\n};\nexport default colors;\n\n/***\n STYLE GUIDE REFERENCE\n dark: \"#2E3747\",\n darkGrey: \"#778390 \",\n grey: \"#B4BCC8\",\n lightGrey: \"#D8DCDF\",\n darkBackground: \"#EFEFF1\",\n lightBorder: \"#EEEEEE\",\n background: \"#F8F8F8\",\n blue: \"#0598FF\",\n darkBlue: \"#0588E6\",\n red: \"#F96A6A\",\n darkRed: \"#E66363\",\n green: \"#7ACC80\",\n yellow: \"#FFC02F\",\n */\n","export interface IShapes {\n  borderRadius: string;\n  fontFamily: string;\n  fontWeight: {\n    regular: number;\n    bold: number;\n  };\n  shadow0: string;\n  shadow1: string;\n  shadow2: string;\n  shadow3: string;\n}\n\nconst shapes: IShapes = {\n  borderRadius: '3px',\n  fontFamily: 'Content-font, Roboto, sans-serif',\n  fontWeight: {\n    regular: 500,\n    bold: 600,\n  },\n  shadow0: '0px 1px 4px 0px',\n  shadow1: '0px 1px 4px 0px',\n  shadow2: '0px 1px 4px 0px',\n  shadow3: '0px 1px 4px 0px',\n};\n\nexport default shapes;\n","// spacings and sizing here!!\n\nexport interface ISpacing {\n  fontSize: string;\n  lineHeight: string;\n  components: {\n    avatar: {\n      sizes: {\n        [key: string]: string;\n      };\n    };\n    button: {\n      padding: {\n        normal: string;\n        small: string;\n      };\n      borderWidth: string;\n      fontSize: {\n        normal: string;\n        small: string;\n      };\n    };\n    checkbox: {\n      borderWidth: string;\n      gap: string;\n      size: string;\n      checkedIconSize: string;\n    };\n    input: {\n      padding: string;\n      fontSize: string;\n      iconPadding: string;\n      borderSize: string;\n    };\n    radiobutton: {\n      borderWidth: string;\n      gap: string;\n      size: string;\n    };\n    list: {\n      rowPadding: string;\n      iconGap: string;\n    };\n    popover: {\n      borderWidth: string;\n      width: string;\n      searchPopover: {\n        padding: string;\n        maxHeight: string;\n        iconSize: string;\n        iconGap: string;\n      };\n      actionPopover: {\n        padding: string;\n        buttonGap: string;\n      };\n    };\n    modal: {\n      padding: string;\n      headerGap: string;\n      buttonGap: string;\n      maxWidth: string;\n    };\n  };\n  padding: {\n    base: string;\n    tabs: {\n      titleItem: string;\n    };\n    modal: {\n      header: string;\n      body: string;\n      footer: string;\n    };\n  };\n  margin: {\n    base: string;\n    list: {\n      form: string;\n    };\n    modal: {\n      footer: string;\n    };\n  };\n  defaultMargin: string;\n  borderWidth: {\n    base: string;\n    textInput: {\n      middleRow: string;\n      suggestions: string;\n    };\n    modal: string;\n  };\n  sizes: {\n    text: {\n      base: string;\n    };\n    list: {\n      text: string;\n      searchHeight: string;\n      iconWidth: string;\n      iconHeight: string;\n      buttonHeight: string;\n    };\n    modal: {\n      headerText: string;\n      headerLineHeight: string;\n      bodyText: string;\n      bodyLineHeight: string;\n      closeButtonTop: string;\n      closeButtonRight: string;\n      closeButtonLineHeight: string;\n    };\n  };\n}\n\n// margins, padding, etc..\n\nconst basePadding = 4;\n\nconst spacing: ISpacing = {\n  fontSize: '14px',\n  lineHeight: '21px',\n  components: {\n    avatar: {\n      sizes: {\n        xs: '24px',\n        sm: '32px',\n        md: '40px',\n        lg: '48px',\n      },\n    },\n    button: {\n      padding: {\n        normal: '7px 10px',\n        small: '2px 8px',\n      },\n      borderWidth: '2px',\n      fontSize: {\n        normal: '16px',\n        small: '14px',\n      },\n    },\n    checkbox: {\n      borderWidth: '1px',\n      gap: '8px',\n      size: '18px',\n      checkedIconSize: '18px',\n    },\n    input: {\n      padding: '8px',\n      fontSize: '16px',\n      iconPadding: '8px',\n      borderSize: '1px',\n    },\n    radiobutton: {\n      borderWidth: '1px',\n      gap: '8px',\n      size: '18px',\n    },\n    list: {\n      rowPadding: '8px',\n      iconGap: '4px',\n    },\n    popover: {\n      borderWidth: '1px',\n      width: '300px',\n      searchPopover: {\n        padding: '4px',\n        maxHeight: '100px',\n        iconSize: '18px',\n        iconGap: '8px',\n      },\n      actionPopover: {\n        padding: '16px',\n        buttonGap: '8px',\n      },\n    },\n    modal: {\n      padding: '16px',\n      headerGap: '8px',\n      buttonGap: '8px',\n      maxWidth: '380px',\n    },\n  },\n  padding: {\n    base: `${basePadding}px`,\n    tabs: {\n      titleItem: `${basePadding * 3}px ${basePadding * 6}px`,\n    },\n    modal: {\n      header: '16px 24px',\n      body: '24px',\n      footer: '10px 16px',\n    },\n  },\n  margin: {\n    base: '4px',\n    list: {\n      form: '0 12px',\n    },\n    modal: {\n      footer: '10px',\n    },\n  },\n  defaultMargin: '8px',\n  borderWidth: {\n    base: '1px',\n    textInput: {\n      middleRow: '1px',\n      suggestions: '1px',\n    },\n    modal: '1px',\n  },\n  sizes: {\n    text: {\n      base: '12px',\n    },\n    list: {\n      text: '13px',\n      searchHeight: '36px',\n      iconWidth: '12px',\n      iconHeight: '12px',\n      buttonHeight: '30px',\n    },\n    modal: {\n      headerText: '20px',\n      headerLineHeight: '22px',\n      bodyText: '14px',\n      bodyLineHeight: '1.5',\n      closeButtonTop: '15px',\n      closeButtonRight: '15px',\n      closeButtonLineHeight: '1',\n    },\n  },\n};\n\nexport default spacing;\n","import { FormCheckmark } from 'grommet-icons';\nimport { normalizeColor } from 'grommet/utils';\nimport { DefaultTheme } from 'styled-components';\n\nexport interface CheckboxProps {\n  theme: object;\n  disabled: boolean;\n  checked: boolean;\n}\n\nconst createCustomCheckBoxTheme = (styledComponentsTheme: DefaultTheme) => ({\n  checkBox: {\n    border: {\n      color: 'light-6',\n      width: styledComponentsTheme.spacing.components.checkbox.borderWidth,\n      radius: styledComponentsTheme.shapes.borderRadius,\n    },\n    check: {\n      extend: (props: CheckboxProps) => {\n        let backgroundColor = 'light-1';\n        if (props.checked) {\n          backgroundColor = 'neutral-3';\n        }\n        if (props.disabled) {\n          backgroundColor = 'light-2';\n        }\n\n        return `background-color: ${normalizeColor(backgroundColor, props.theme)};`;\n      },\n    },\n    color: 'light-1',\n    gap: styledComponentsTheme.spacing.components.checkbox.gap,\n    hover: {\n      border: {\n        color: 'neutral-3',\n      },\n    },\n    icon: {\n      size: styledComponentsTheme.spacing.components.checkbox.checkedIconSize,\n    },\n    icons: {\n      checked: FormCheckmark,\n    },\n    size: styledComponentsTheme.spacing.components.checkbox.size,\n    extend: (props: CheckboxProps) => {\n      const textColor = props.checked && !props.disabled ? 'dark-1' : 'dark-3';\n\n      return `\n        opacity: 1;\n        color: ${normalizeColor(textColor, props.theme)};\n        input[type=checkbox]:disabled + div {\n          border-color: ${normalizeColor('light-6', props.theme)};\n        }\n        input[type=checkbox]:checked:not([disabled]) + div {\n          border-color: ${normalizeColor('neutral-3', props.theme)};\n        }\n        input[type=checkbox]:checked:disabled + div > svg {\n          stroke: ${normalizeColor('light-6', props.theme)};\n        }\n      `;\n    },\n  },\n});\n\nexport default createCustomCheckBoxTheme;\n","import { DefaultTheme } from 'styled-components';\n\ninterface IconProps {\n  theme: object;\n}\n\nconst createCustomIconTheme = (styledComponentsTheme: DefaultTheme) => ({\n  icon: {\n    extend: () => `\n    & * {\n        stroke: ${styledComponentsTheme.colors.background} !important;\n      }\n    `,\n  },\n});\n\nexport default createCustomIconTheme;\n","import { normalizeColor } from 'grommet/utils';\nimport { DefaultTheme } from 'styled-components';\n\nexport interface RadiobuttonProps {\n  theme: object;\n  disabled: boolean;\n  checked: boolean;\n}\n\nconst createCustomRadiobuttonTheme = (styledComponentsTheme: DefaultTheme) => ({\n  radioButton: {\n    border: {\n      color: 'light-6',\n      width: styledComponentsTheme.spacing.components.radiobutton.borderWidth,\n    },\n    check: {\n      color: 'neutral-3',\n    },\n    color: 'neutral-3',\n    // icon: {\n    //   extend: (props: RadiobuttonProps) => {\n    //     return `background-color: ${normalizeColor('light-1', props.theme)};`\n    //   },\n    // },\n    gap: styledComponentsTheme.spacing.components.radiobutton.gap,\n    hover: {\n      border: {\n        color: 'neutral-3',\n      },\n    },\n    size: styledComponentsTheme.spacing.components.radiobutton.size,\n    extend: (props: RadiobuttonProps) => {\n      // const textColor = props.checked && !props.disabled ? 'dark-1' : 'dark-3'\n\n      return `\n        opacity: 1;\n        color: ${normalizeColor('dark-3', props.theme)};\n\n        input[type=radio]:disabled + div {\n          border-color: ${normalizeColor('light-6', props.theme)};\n        }\n        input[type=radio]:disabled + div > svg > circle {\n          fill: ${normalizeColor('light-6', props.theme)};\n        }\n\n        &:has(input[type=radio]:checked) > span {\n          color: ${normalizeColor('dark-1', props.theme)};\n        }\n      `;\n    },\n  },\n});\n\nexport default createCustomRadiobuttonTheme;\n","import { normalizeColor } from 'grommet/utils';\nimport { DefaultTheme } from 'styled-components';\n\ninterface TextInputProps {\n  theme: object;\n}\n\nconst createCustomTextInputTheme = (styledComponentsTheme: DefaultTheme) => ({\n  textInput: {\n    extend: () => `\n      border: ${styledComponentsTheme.spacing.components.input.borderSize} solid ${(\n      props: TextInputProps,\n    ) => normalizeColor('light-6', props.theme)};\n      opacity: 1;\n      font-size: ${styledComponentsTheme.spacing.components.input.fontSize};\n      width: 100%;\n      padding: ${styledComponentsTheme.spacing.components.input.padding};\n    `,\n    container: {\n      extend: () => `\n      `,\n    },\n    placeholder: {\n      extend: () => `\n        width: 100%;\n        color: ${styledComponentsTheme.colors.grey};\n      `,\n    },\n    focus: {\n      border: {\n        color: 'neutral-3',\n      },\n    },\n  },\n});\n\nexport default createCustomTextInputTheme;\n","import { deepMerge } from 'grommet/utils';\nimport { DefaultTheme } from 'styled-components';\nimport createCustomCheckBoxTheme from './components/checkbox';\n// import createCustomModalTheme from './components/modal';\nimport createCustomIconTheme from './components/icon';\nimport createCustomRadiobuttonTheme from './components/radiobutton';\nimport createCustomTextInputTheme from './components/text-input';\n\nconst createGrommetTheme = (styledComponentsTheme: DefaultTheme) => {\n  return deepMerge(styledComponentsTheme, {\n    global: {\n      input: {\n        weight: 400,\n      },\n      font: {\n        family: styledComponentsTheme.shapes.fontFamily,\n        size: styledComponentsTheme.spacing.fontSize,\n      },\n      colors: {\n        border: 'light-6',\n        'light-1': styledComponentsTheme.colors.white,\n        'light-2': styledComponentsTheme.colors.background,\n        'light-6': styledComponentsTheme.colors.lightGrey,\n        'dark-1': styledComponentsTheme.colors.dark,\n        'dark-2': styledComponentsTheme.colors.darkGrey,\n        'dark-3': styledComponentsTheme.colors.grey,\n        'accent-2': styledComponentsTheme.colors.border,\n        'neutral-1': styledComponentsTheme.colors.green,\n        'neutral-3': styledComponentsTheme.colors.blue,\n        control: {\n          light: styledComponentsTheme.colors.border,\n          dark: styledComponentsTheme.colors.border,\n        },\n        text: {\n          light: styledComponentsTheme.colors.dark,\n          dark: styledComponentsTheme.colors.dark,\n        },\n      },\n      control: {\n        border: {\n          radius: styledComponentsTheme.shapes.borderRadius,\n        },\n      },\n      focus: {\n        border: {\n          color: 'neutral-3',\n        },\n      },\n    },\n    text: {\n      medium: {\n        size: '13px',\n        height: '26px',\n      },\n    },\n    select: {\n      control: {\n        extend: 'padding: 3px 6px;',\n      },\n    },\n    grommet: {\n      extend: () => `\n        color: ${styledComponentsTheme.colors.dark}\n      `,\n    },\n    ...createCustomTextInputTheme(styledComponentsTheme),\n    ...createCustomCheckBoxTheme(styledComponentsTheme),\n    ...createCustomRadiobuttonTheme(styledComponentsTheme),\n    ...createCustomIconTheme(styledComponentsTheme),\n  });\n};\n\nexport default createGrommetTheme;\n","import { DefaultTheme } from 'styled-components';\nimport colors from '../colors-light';\nimport shapes from '../shapes';\nimport spacing from '../spacing';\nimport createGrommetTheme from '../theme';\n\nexport function createTheme(overrides?: object): DefaultTheme {\n  const styles = {\n    colors,\n    spacing,\n    shapes,\n    ...overrides,\n  };\n  return createGrommetTheme(styles);\n}\n","import colors from '../colors-dark';\nimport { createTheme } from './create-theme';\n\nexport default createTheme({\n  colors: { ...colors },\n  name: 'Dark-Theme',\n  dark: true,\n});\n","import IColors from '../interfaces/IColors';\n\nconst colors: IColors = {\n  disabledOpacity: '0.5',\n  dark: '#0E1012', // black\n  darkGrey: '#131517', // dark\n  grey: '#181C1F', // dark-grey\n  lightGrey: '#272B2E', // grey\n  darkBackground: '#4B555E', // medium-grey\n  border: '#8B8F94', // light-grey\n  background: '#F8F8F8', // background\n  blue: '#0598FF', // blue\n  darkBlue: '#0588E6', // dark-blue\n  red: '#F96A6A', // red\n  darkRed: '#E66363', // dark-red\n  green: '#7ACC80', // green\n  yellow: '#FFC02F', // yellow\n  white: '#FFF', // white\n};\n\nexport default colors;\n\n/***\n STYLE GUIDE REFERENCE\n black: \"#0E1012\",\n dark: \"#131517\",\n darkGrey: \"#181C1F\",\n grey: \"#272B2E\",\n mediumGrey: \"#4B555E\",\n lightGrey: \"#8B8F94\",\n background: \"#F8F8F8\",\n blue: \"#0598FF\",\n darkBlue: \"#0588E6\",\n red: \"#F96A6A\",\n darkRed: \"#E66363\",\n green: \"#7ACC80\",\n yellow: \"#FFC02F\",\n */\n","import { createTheme } from './create-theme';\n\nexport default createTheme({ name: 'Light-Theme' });\n","/* Components */\nimport Avatar from './components/Avatar';\nimport Button from './components/Button';\nimport Tab from './components/Tabs/tab';\nimport Tabs from './components/Tabs/tabs';\n/* Themes and theme related utils */\nimport { createTheme } from './styles/themes/create-theme';\nimport darkTheme from './styles/themes/dark-theme';\nimport lightTheme from './styles/themes/light-theme';\n\n/* Types (should we?) */\n\nexport { Avatar, Button, Tabs, Tab, lightTheme, darkTheme, createTheme };\n"],"sourceRoot":""}