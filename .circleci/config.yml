# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
commands:
  create_concatenated_package_lock:
    description: "Concatenate all package-lock.json"
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: npx lerna list -p -a | awk '{printf "\"%s/package-lock.json\" ", $1}' | xargs -n 100 cat > << parameters.filename >> 2>/dev/null || exit 0
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:12.13.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/akasha-world-framework

    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - create_concatenated_package_lock:
          filename: combined-package-lock.txt
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - dependency-cache-v1-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}
            - dependency-cache-v1

      - run:
          name: install-npm-wee
          command: npm install
      - run: # bootstrap packages
          name: bootstrap-install
          command: npm run bootstrap
      - run: # tslint check
          name: linter-check
          command: npm run linter:check
      - run: # build sdk
          name: build-sdk
          command: npm run build:sdk
      - run: # pack ui-apps
          name: pack-ui-apps
          command: npm run pack:ui-apps
      - run: # extract-translations
          name: extract-translations
          command: npm run extract:translations
      - run: # build-storybook
          name: build-storybook
          command: make build.staging.storybook
