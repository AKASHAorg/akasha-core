# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: cimg/node:16.13.0

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/akasha-world-framework

    steps: # a collection of executable commands
      - checkout # special step to check out source code to working directory
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@8.1.2'
      - run:
          name: install gcc
          command: 'sudo apt-get update -y && sudo apt-get install -y build-essential libsqlite3-dev'
      - restore_cache: # special step to restore the dependency cache
          # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          keys:
            - dependency-cache-v1-{{ checksum "yarn.lock" }}
            - dependency-cache-v1
      - run:
          name: python-setup
          command: 'npm config set python /usr/bin/python3'
      - run:
          name: install-yarn-packages
          command: yarn install --frozen-lockfile
      - run: # bootstrap packages
          name: bootstrap-install
          command: yarn run bootstrap
      - save_cache:
          paths:
            - node_modules
          key: dependency-cache-v1-{{ checksum "yarn.lock" }}
#      - run: # tslint check
#          name: linter-check
#          command: npm run linter:check
      - run: # compile ts files
          name: tsc:all
          command: yarn run tsc:all
#      - run: # build sdk
#          name: build-sdk
#          command: yarn run build:sdk
#      - run: # pack ui-apps
#          name: pack-ui-apps
#          command: yarn run pack:ui
#      - run: # extract-translations
#          name: extract-translations
#          command: yarn run extract:translations
      - run: # unit-tests
          name: unit-tests
          command: yarn run test:all
#      - run: # build-storybook
#          name: build-storybook
#          command: make build.staging.storybook
